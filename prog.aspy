refer lib

:p each :x of :l =  
  case
    l == []
    []
    p == []
    l
    -true-
    unroll-bound-p ( x ) ( head l ) p :: ( p each x of ( tail l ) )


( ' list ( list x ) each y of ( 1 to 3 ) ) each x of ( [ [ 1 2 ] [ 3 4 ] ] )
